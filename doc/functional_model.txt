Функциональная модель BitVaram включает в себя следующие механизмы:

## Глобальное определение

---

#Ключевой особенностью языка является возможность определить функцию на уровне языка во время выполнения программы.
Глобальные определения хранятся в environment.bv. Эти определения используются компилятором. Во время выполнения программы создается специальная структура для хранения функций, определенных в runtime. При обращении к новым глобально определенным функциям эта структура также используется для поиска определений. После завершения программы новые определения добавляются в environment.bv. Перегрузки не поддерживаются - если глобально определена функция, хранящаяся в окружении BitVaram, то она переопределяется безвозвратно после завершения программы. Если во время выполнения имеется две функции с одинаковыми именами, приоритет отдается той, что позже определена.

---

#Для глобального определения имеется обратным механизм глобального разопределения.
Как было сказано ранее, глобальные определения хранятся в environment.bv. Компилятором создается выходной файл на языке IR, которым инициализируется виртуальная машина. Во время выполнения при обнаружения директивы разопределения проверяется определения функции. Если во время выполнения имеется две функции с одинаковыми именами, приоритет отдается той, что позже определена. При обнаружении неопределенной функции директива пропускается.

---

*Механизм (локального) определения реализован традиционно*

Для реализации (локального) разопределения используется такая же специальная структура, в которой хранятся runtime global определения. Единственное отличие в том, что при завершении программы не учитываются функции, определенные "здесь".

---

##Параметры функций

*Механизм передачи параметров реализован традиционно, тривиально*